import React, { useState, useEffect } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { PDFDownloadLink } from "@react-pdf/renderer";
import "../main.css";
import Header from "./Header";
import FormDocu7 from "./FormDocu7";

const Form7 = () => {
  const [formData, setFormData] = useState({
    form7KpCaseNumber: "",
    form7Blg: "",
    form7UkolSa: "",
    form7MaySumbong: "",
    form7MaySumbong1: "",
    form7Ipinagsumbong: "",
    form7Ipinagsumbong1: "",
    reklamo: "",
    resolutionRequest: "",
    form7Day: "",
    form7Month: "",
    form7Year: "",
    form7ReceiveDay: "",
    form7ReceiveMonth: "",
    form7ReceiveYear: "",
  });

  const navigate = useNavigate();

  const handleInputChange = (e) => {
    const { id, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [id]: value,
    }));
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    // Construct form data from input values
    const form7Data = {
      kpCaseNumber: formData.form7KpCaseNumber,
      maySumbong: formData.form7MaySumbong + ", " + formData.form7MaySumbong1,
      ipinagsumbong: formData.form7Ipinagsumbong + ", " + formData.form7Ipinagsumbong1,
      usapingBlg: formData.form7Blg,
      ukolSa: formData.form7UkolSa,
      reklamo: formData.reklamo,
      kalunasan: formData.resolutionRequest,
      day: formData.form7Day,
      month: formData.form7Month,
      year: formData.form7Year,
      receiveDay: formData.form7ReceiveDay,
      receiveMonth: formData.form7ReceiveMonth,
      receiveYear: formData.form7ReceiveYear,
    };

    // Make sure the correct backend URL is used here
    axios
      .post("http://localhost:3001/form7", form7Data)
      .then((response) => {
        console.log(response);
        navigate("/form7next"); // Redirect to form7next on success
      })
      .catch((error) => {
        console.error("Error adding Form 7 data: ", error);
      });
  };

  // Function to fetch the auto-generated numbers from the backend
  const fetchAutoGeneratedNumbers = async () => {
    try {
      const response = await axios.get("http://localhost:3001/form7/autogenerate"); // API endpoint to get the numbers
      setFormData((prevData) => ({
        ...prevData,
        form7KpCaseNumber: response.data.kpCaseNumber,
        form7Blg: response.data.usapingBlg,
      }));
    } catch (error) {
      console.error("Error fetching auto-generated numbers: ", error);
    }
  };

  // Fetch the auto-generated numbers when the component mounts
  useEffect(() => {
    fetchAutoGeneratedNumbers();
  }, []);

  const handleNext = () => {
    navigate("/form7next");
  };

  return (
    <div className="form7-page">
      <Header showButton={false} />
      <h1 className="form7-title">Form 7: Sumbong</h1>
      <h2 className="form7-subtitle">Submit complaints for documentation and resolution by the Barangay</h2>
      
      <div className="form7-container">
        <form onSubmit={handleSubmit}>
          <div className="form7-kp-input">
            <label className="form7-kpcase">
              KP Case Number: &nbsp;
              <input type="text" id="form7KpCaseNumber" value={formData.form7KpCaseNumber} readOnly />
            </label>
          </div>
          <div className="form7-pormularyoblg">
            <label className="form7-pormularyo">Pormularyo ng KP Blg. 7</label>
          </div>
          <div className="form7-heading">
            <label className="form7-head">
              Republika ng Pilipinas <br />
              Lalawigan ng Kabite <br />
              Bayan ng Indang <br />
              Barangay Poblacion 1
            </label>
          </div>
          <div className="form-group">
            <label className="form7-centered-label">
              <br /> TANGGAPAN NG LUPONG TAGAPAMAYAPA
            </label>
          </div>
          <div className="form-row two-columns centered-row">
            <div className="form-group">
              <input type="text" id="form7MaySumbong" value={formData.form7MaySumbong} onChange={handleInputChange} /> <br />
              <input type="text" id="form7MaySumbong1" value={formData.form7MaySumbong1} onChange={handleInputChange} /> <br />
              <label className="form7-sumbong">
                (Mga) May Sumbong <br /> -laban kay/kina-
              </label> <br />
              <input type="text" id="form7Ipinagsumbong" value={formData.form7Ipinagsumbong} onChange={handleInputChange} /> <br />
              <input type="text" id="form7Ipinagsumbong1" value={formData.form7Ipinagsumbong1} onChange={handleInputChange} /> <br />
              <label className="form7-sumbong"> (Mga) Ipinagsusumbong </label>
            </div>

            <div className="form-group">
              <div className="form7-blg-input">
                <label>Usaping Barangay Blg. </label>
                <input type="text" id="form7Blg" value={formData.form7Blg} readOnly />
              </div>
              <div className="form7-ukol-input">
                <label>Ukol sa:</label>
                <input type="text" id="form7UkolSa" value={formData.form7UkolSa} onChange={handleInputChange} />
              </div>
            </div>
          </div>
          <div className="form-group">
            <label className="form7-centered-label">REKLAMO</label>
          </div>
          <div className="form7-paragraph">
            <label className="form7-justify">
              AKO/KAMI, ay nagrereklamo laban sa mga ipinagsusumbong na binanggit sa itaas dahil sa paglabag sa aking/aming mga karapatan at kapakanan sa sumusunod na pamamaraan:
              <textarea id="reklamo" value={formData.reklamo} onChange={handleInputChange}></textarea>
            </label>
          </div>
          <div className="form7-paragraph">
            <label className="form7-justify">
              DAHIL DITO, AKO/KAMI, na nakikiusap na ipagkaloob sa akin/amin
              ang sumusunod na (mga) kalunasan nang naaalinsunod sa batas at/o
              pagkamakatuwiran:
              <textarea id="resolutionRequest" value={formData.resolutionRequest} onChange={handleInputChange}></textarea>
            </label>
          </div>

          <div className="form7-form-input">
            <label className="form7-indent">Ginawa ngayong ika-</label>
            <input type="text" id="form7Day" value={formData.form7Day} onChange={handleInputChange} />
            <label>araw ng</label>
            <input type="text" id="form7Month" value={formData.form7Month} onChange={handleInputChange} />
            <label>20</label>
            <input type="text" id="form7Year" value={formData.form7Year} onChange={handleInputChange} />
            <label>.</label>
          </div>
          <br />

          <div className="form7-sign-container">
            <div className="form7-sign-line"></div>
          </div>
          <p className="form7-sign-text">(Mga) May Sumbong</p>
          <br />
          <div className="form7-form-input">
            <label className="form7-indent">Tinanggap at inihain ngayong ika-</label>
            <input type="text" id="form7ReceiveDay" value={formData.form7ReceiveDay} onChange={handleInputChange} />
            <label>araw ng</label>
            <input type="text" id="form7ReceiveMonth" value={formData.form7ReceiveMonth} onChange={handleInputChange} />
            <label>20</label>
            <input type="text" id="form7ReceiveYear" value={formData.form7ReceiveYear} onChange={handleInputChange} />
            <label>.</label>
          </div>
          <br /> <br /> 
          <br /> 
          <div className="form7-sig-container">
            <div className="form7-sig-line"></div>
          </div>
          <p className="form7-sig-text">Punong Barangay/Kalihim ng Lupon</p>
          <br />
          <div className="form7-button-group">
            <PDFDownloadLink
              document={<FormDocu7 data={formData} />}
              fileName="form7.pdf"
              className="form7-print-button"
            >
              {({ blob, url, loading, error }) =>
                loading ? "Loading document..." : "Print"
              }
            </PDFDownloadLink>
            
            <button
              type="submit"
              className="form7-next-button"
              style={{ marginLeft: "10px" }} // Optional styling
              onClick={handleNext}
            >
              Next
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default Form7;